events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    # Log format to show forwarded auth headers
    log_format auth '$remote_addr - [$time_local] "$request" '
                   '$status $body_bytes_sent '
                   'user_id="$http_x_user_id" '
                   'user_email="$http_x_user_email" '
                   'auth_provider="$http_x_user_provider" '
                   'auth_type="$http_x_auth_type"';
                   
    access_log /var/log/nginx/access.log auth;

    server {
        listen 80;
        server_name localhost;

        # API endpoints
        location /api/ {
            default_type application/json;
            return 200 '{
                "message": "API endpoint accessed successfully",
                "user_id": "$http_x_user_id",
                "user_email": "$http_x_user_email", 
                "auth_provider": "$http_x_user_provider",
                "endpoint": "public_api",
                "timestamp": "$time_iso8601"
            }';
        }

        # Protected endpoints
        location /protected {
            default_type application/json;
            return 200 '{
                "message": "Protected endpoint accessed successfully",
                "user_id": "$http_x_user_id",
                "user_email": "$http_x_user_email",
                "auth_provider": "$http_x_user_provider", 
                "endpoint": "protected",
                "timestamp": "$time_iso8601"
            }';
        }

        # Internal endpoints (IP whitelist only)
        location /internal {
            default_type application/json;
            return 200 '{
                "message": "Internal endpoint accessed successfully",
                "user_id": "$http_x_user_id",
                "auth_type": "$http_x_auth_type",
                "client_ip": "$remote_addr",
                "endpoint": "internal",
                "timestamp": "$time_iso8601"
            }';
        }

        # Admin endpoints (multi-provider)
        location /admin {
            default_type application/json;
            return 200 '{
                "message": "Admin endpoint accessed successfully", 
                "user_id": "$http_x_user_id",
                "user_email": "$http_x_user_email",
                "auth_provider": "$http_x_user_provider",
                "auth_type": "$http_x_auth_type",
                "endpoint": "admin",
                "security_level": "high",
                "timestamp": "$time_iso8601"
            }';
        }

        # Default response
        location / {
            default_type application/json;
            return 200 '{
                "service": "AuthGuard Backend Demo",
                "message": "Backend service is running",
                "endpoints": [
                    "/api/ - Public API (Firebase auth)",
                    "/protected - Protected (Firebase auth)", 
                    "/internal - Internal (IP whitelist)",
                    "/admin - Admin (Firebase + IP whitelist)"
                ]
            }';
        }
    }
}